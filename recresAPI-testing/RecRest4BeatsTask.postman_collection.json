{
	"info": {
		"_postman_id": "9e43c968-3650-498b-8972-6a86c88cec31",
		"name": "RecRest4BeatsTask",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37041522"
	},
	"item": [
		{
			"name": "create_user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Md. Abu Talha (QA & Tester)\r",
							"// email: abutalha.nub@gmail.com\r",
							"\r",
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
							"pm.environment.set(\"firstName\", firstName);\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\");\r",
							"pm.environment.set(\"lastName\", lastName)\r",
							"\r",
							"var type = pm.variables.replaceIn(\"$randomCommonFileName\");\r",
							"pm.environment.set(\"type\", type);\r",
							"\r",
							"const date = require(\"moment\");\r",
							"const date1 = date();\r",
							"var createdAt =date1.add(5, 'd').format(\"YYYY-MM-DD\");\r",
							"pm.environment.set(\"createdAt\",createdAt);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"id\", jsonData.id);\r",
							"\r",
							"pm.test(\"Status code would be 201 OK\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							"// Test to check the response body structure and values\r",
							"pm.test(\"Response body structure is valid\", function () {\r",
							"    var responseJSON = pm.response.json();\r",
							"    pm.expect(responseJSON).to.be.an('object');\r",
							"    pm.expect(responseJSON).to.have.property('first_name');\r",
							"    pm.expect(responseJSON).to.have.property('last_name');\r",
							"    pm.expect(responseJSON).to.have.property('job');\r",
							"    pm.expect(responseJSON).to.have.property('Type');\r",
							"    pm.expect(responseJSON).to.have.property('id');\r",
							"    pm.expect(responseJSON).to.have.property('createdAt');\r",
							"});\r",
							"// Test to check the Content-Type of the response\r",
							"pm.test(\"Response Content-Type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"first_name\": \"{{firstName}}\",\r\n    \"last_name\": \"{{lastName}}\",\r\n    \"job\": \"{{lastName}}\",\r\n    \"Type\": \"{{type}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/users/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "get_recres",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/users/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"users",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "update_req",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\");\r",
							"pm.environment.set(\"firstName\", firstName);\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\");\r",
							"pm.environment.set(\"lastName\", lastName)\r",
							"\r",
							"var type = pm.variables.replaceIn(\"$randomCommonFileName\");\r",
							"pm.environment.set(\"type\", type);\r",
							"\r",
							"const date = require(\"moment\");\r",
							"const date1 = date();\r",
							"var createdAt =date1.add(5, 'd').format(\"YYYY-MM-DD\");\r",
							"pm.environment.set(\"createdAt\",createdAt);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code would be 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Test to check the response body structure and values\r",
							"pm.test(\"Response body structure is valid\", function () {\r",
							"    var responseJSON = pm.response.json();\r",
							"    pm.expect(responseJSON).to.be.an('object');\r",
							"    pm.expect(responseJSON).to.have.property('name'); // Fixed property name\r",
							"    pm.expect(responseJSON).to.have.property('last_name');\r",
							"    pm.expect(responseJSON).to.have.property('job');\r",
							"    pm.expect(responseJSON).to.have.property('type'); // Fixed property name\r",
							"    pm.expect(responseJSON).to.have.property('id');\r",
							"    pm.expect(responseJSON).to.have.property('createdAt');\r",
							"});\r",
							"\r",
							"// Test to check the Content-Type of the response\r",
							"pm.test(\"Response Content-Type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"name\": \"{{firstName}}\",\r\n\"last_name\": \"{{lastName}}\",\r\n    \"job\": \"{{lastName}}\",\r\n    \"Type\": \"{{type}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/users/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"users",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete_req",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/users/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"users",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}